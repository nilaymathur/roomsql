type PropertyCount {
    count: Int!
    is_active: Int!
}

type Address {
    city: String
    state: String
    country: String
    flat_no: String
    floor_no: Int
    land_mark: String
    street: String
    zip: Int
    description: String
}

input AddressInput {
    city: String
    state: String
    country: String
    flat_no: String
    floor_no: Int
    land_mark: String
    street: String
    zip: Int
    description: String
}

type GPSCoordinates {
    lat: Float
    lng: Float
}

input GPSCoordinatesInput {
    lat: Float
    lng: Float
}

type ImageURL {
    url: String!
}

input ImageURLInput {
    url: String!
}

type Property {
    propertyId: ID!
    property_count: Int!
    property_name: String!
    owner_name: String!
    owner_id: String!
    aadhar_no: String!
    address: Address!
    registered_at: String!
    market_distance: Float
    rent: Float
    type: String!
    bhk: Int
    max_share: Int
    room_size: Float
    description: String
    area: String
    is_active: Boolean!
    city_verified: Boolean!
    gps_coordinates: GPSCoordinates!
    is_available: Boolean!
    has_amenities: Boolean!
    image_urls: [ImageURL!]!
}

input PropertyInput {
    property_count: Int!
    property_name: String!
    owner_name: String!
    owner_id: String!
    aadhar_no: String!
    address: AddressInput!
    registered_at: String
    market_distance: Float
    rent: Float
    type: String!
    bhk: Int
    max_share: Int
    room_size: Float
    description: String
    area: String
    is_active: Boolean = true
    city_verified: Boolean!
    gps_coordinates: GPSCoordinatesInput!
    is_available: Boolean = true
    has_amenities: Boolean = false
    image_urls: [ImageURLInput!]!
}

type Query {
    getPropertyById(propertyId: ID!): Property
    getAllProperties: [Property!]!
    getPropByLT(type: String!, city: String!, state: String!, country: String!): [Property!]!
    getPropertyCount(owner_id: String!): PropertyCount!
    getMyProperties(owner_id: String!):[Property!]!
}

type Mutation {
    insertProperty(property: PropertyInput!): Property
    updateProperty(propertyId: ID!, property: PropertyInput!): Property
    deleteProperty(propertyId: ID!): Boolean
    updateHasAmenities(propertyId: ID!, has_amenities: Boolean!): Property
    updateIsActive(propertyId: ID!, is_active: Boolean!): Property
}